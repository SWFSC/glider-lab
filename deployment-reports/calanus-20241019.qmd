---
title: "Glider Deployment Report"
---

## Deployment of calanus (October 19, 2024)

### Summary

```{r, warning = FALSE}
#| echo: false
#| message: false
#| include: false
library(ncdf4)
library(dplyr)
library(lubridate)

#change file names
#set base path, then use Google Cloud Shell to download files into folders within base path
base.path <- "Data"
#update as necessary
deployment<-"calanus-20241019"
eng.ts<-file.path(base.path,deployment,"processed-L1",paste0(deployment,"-delayed-eng.nc"))
sci.ts<-file.path(base.path,deployment,"processed-L1",paste0(deployment,"-delayed-sci.nc"))
raw.ts<-file.path(base.path,deployment,"processed-L1",paste0(deployment,"-delayed-raw.nc"))
nc.eng <- nc_open(eng.ts)
nc.sci <- nc_open(sci.ts)
nc.raw <- nc_open(raw.ts)

nc.eng.time <- as.POSIXct(ncvar_get(nc.eng, "time"), origin = "1970-01-01")
nc.eng.lat <- ncvar_get(nc.eng, "latitude")
nc.eng.lon <- ncvar_get(nc.eng, "longitude")
nc.raw.lat <- ncvar_get(nc.raw, "gps_latitude")
nc.raw.lon <- ncvar_get(nc.raw, "gps_longitude")

lat<-nc.raw.lat
lon<-nc.raw.lon
surf<-cbind(lat,lon)
surf<-as.data.frame(surf)
surf<-na.omit(surf)

#eliminate erroneous gps hits to calculate an accurate distance. May need to visualize on a map and comment these in and out as necessary  
minlon.thresh<-min(surf$lon)+0.05
maxlon.thresh<-max(surf$lon)-0.05
surf<-surf[surf$lon > minlon.thresh & surf$lon < maxlon.thresh,]

minlat.thresh<-min(surf$lat)+0.05
#maxlat.thresh<-max(surf$lat)-0.05 
surf<-surf[surf$lat > minlat.thresh,]

#calculating distance traveled from GPS points
library(geosphere)
library(rlist)
library(circular)
library(dplyr)
library(pracma)
lat<-surf$lat
lon<-surf$lon

#this creates 2 vectors that are offset so that the first row of lat1 and lon1 is the starting point and the first row of lat2 and lon2 is the ending point
lat1<-lat[-length(lat)]
lat2<-lat[-1]
lon1<-lon[-length(lon)]
lon2<-lon[-1]

# Function to calculate distance between two geographic coordinates using the Haversine formula
haversine <- function(lat1, lon1, lat2, lon2) {
  # Convert degrees to radians
  lat1 <- deg2rad(lat1)
  lon1<- deg2rad(lon1)
  lat2 <- deg2rad(lat2)
  lon2 <- deg2rad(lon2)
  
  # Haversine formula
  dlat <- lat2 - lat1
  dlon <- lon2 - lon1
  a <- sin(dlat / 2)^2 + cos(lat1) * cos(lat2) * sin(dlon / 2)^2
  c <- 2 * atan2(sqrt(a), sqrt(1 - a))
  
  # Radius of Earth in kilometers (mean radius)
  r <- 6371
  
  # Distance in kilometers
  d <- r * c
  return(d)
}

# Initialize a vector to store distances
distances <- numeric(length(lat))

# Calculate distances using a for loop
for (i in 1:length(lat1)) {
  distances[i] <- haversine(lat1[i], lon1[i], lat2[i], lon2[i])
}

#sum for total distance covered
sum(distances)

# code that splits date from time to calculate days deployed
glider.date<-as.character(nc.eng.time)
new.glider.date<-strsplit(glider.date,split=" ")
new.glider.date<-unlist(new.glider.date)
new.glider.date<-new.glider.date[c(TRUE,FALSE)]
deployment.length<-unique(new.glider.date)
days.deployed<-length(deployment.length)

```

The Ecosystem Science Division (ESD) at the Southwest Fisheries Science Center (SWFSC) deployed glider **calanus** on `{r} deployment.length[1]` off the coast of **Humboldt, CA** (`{r} round(nc.eng.lat[1],digits=2)` ^o^ N, `{r} round(nc.eng.lon[1],digits=2)` ^o^ W) (Figure 1). Sensors deployed on the glider are listed in @tbl-sensors.

```{r}
#| echo: false
#| message: false

#code for number of dives performed during deployment
nc.eng.yos <- ncvar_get(nc.eng, "total_num_inflections")
nc.eng.yos<-as.vector(nc.eng.yos)
nc.eng.yos<-na.omit(nc.eng.yos)
dives<-round((max(nc.eng.yos)-min(nc.eng.yos))/2,digits=0)

#max depth
nc.eng.depth <- ncvar_get(nc.eng, "depth")
nc.eng.depth <- as.vector(nc.eng.depth)
max.depth <- max(nc.eng.depth)
```

@fig-map displays tracklines of glider during deployment. The glider remained deployed for `{r} days.deployed` days, performed `{r} dives` dives, and traveled a total of `{r} round(sum(distances),digits=2)` km while diving to a maximum depth of `{r} round(max.depth,digits=1)` m. The glider was recovered on `{r} deployment.length[length(deployment.length)]`.

```{r, warning = FALSE}
#| label: fig-map
#| fig-cap: "Glider tracklines"
#| echo: false
#| message: false
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 

#install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))

library(cowplot)
library(googleway)
library(ggplot2)
library(ggrepel)
library(ggspatial)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(lwgeom)


world <- ne_countries(scale = "medium", returnclass = "sf")

minlat<-min(surf$lat)
maxlat<-max(surf$lat)
minlon<-min(surf$lon)
maxlon<-max(surf$lon)
ggplot(data = world) +
  geom_sf() +
  geom_point(data = surf, aes(x = lon, y = lat), color = "darkred", size=1) +
  coord_sf(xlim = c(maxlon,minlon), ylim = c(maxlat, minlat), expand = FALSE)+xlab("Longitude")+ylab("Latitude")+theme_minimal()
```

```{r}
#| label: tbl-sensors
#| tbl-cap: "Science sampling strategies for current glider deployment. Additional settings for the Williamson and Associates camera and the Nortek echosounder (if installed) are defined in configuration and initialization files on the glider's science computer, and are also housed on the Google Cloud Platform. All deployment files are available on request."
#| echo: false
#| message: false
```

| File Name   | Sensor                                                 | State to Sample                        | Depth to Sample | Serial Number |
|---------------|---------------|---------------|---------------|---------------|
| sample01.ma | Sea-Bird Conductivity Temperature Depth (CTD) (SBE-41) | Diving, hovering, climbing             | 1000 m          | 9715          |
| sample48.ma | Sea-Bird ECO Puck (FLBBCD-SLC, CDOM)                   | Diving, hovering, climbing             | 1000 m          | 6866          |
| sample54.ma | AANDERAA oxygen optode (4831)                          | Diving, hovering, climbing             | 1000 m          | 1127          |
| sample64.ma | Mini Signature-100 wideband echosounder (Nortek)       | Diving, hovering, climbing, on surface | 1000 m          | 1781          |

The goal of this deployment was to collect baseline ecosystem data in an ocean energy area. The glider aborted one time throughout the deployment, for a failed optode on November 1. After multiple unsuccessful attempts to communicate with the optode, it was taken out of service for the remainder of the deployment.

### Introduction

The Ecosystem Science Division at NOAA Fisheries’ Southwest Fisheries Science Center monitors the living marine resources within the Southern Ocean and the California Current in order to satisfy the requirements of several legislative mandates to provide management advice. To achieve this goal, we use autonomous underwater buoyancy-driven gliders with integrated sensors for measuring ocean conditions, plankton densities, and marine mammal distributions.

Depending on the specific deployment objective, Slocum gliders are equipped with a suite of sensors. We obtain acoustic estimates of zooplankton density (primarily Antarctic krill in the Southern Ocean) using one of two different echosounders: an Acoustic Zooplankton Fish Profiler with discrete frequencies at 67.5 and 125 kHz (AZFP, ASL, Inc) and a mini-Signature 100 wideband echosounder with continuous frequencies between 70 and 120 kHz (Nortek). We also collect ancillary oceanographic data (temperature, salinity, dissolved oxygen, chlorophyll, colored dissolved organic matter, backscatter, and photosynthetically active radiation) to characterize the marine environment. Additional sensors may include passive acoustic monitors for marine mammal detection (“Wispr”, Embedded Ocean Systems; digital acoustic monitoring “DMON”, Woods Hole Oceanographic Institution), “glidercams” for verifying acoustic targets (Williamson and Associates, Inc.) and shadowgraph cameras for obtaining imagery of the plankton community (Williamson and Associates, Inc.). Imagery is used to train artificial intelligence (AI) models to automate plankton identification.

Hefring OceanScout gliders are equipped with conductivity-temperature-depth sensors (CTDs; RBR, Inc.) and “Wispr” passive acoustic monitors.

### Pre-deployment preparation and testing

Prior to deployment, the ESD has a standard protocol for preparing and testing gliders to minimize or eliminate issues that may occur due to human error during deployment:

*Slocum gliders*

1.  Gliders are properly ballasted (i.e., weighted) so that the density of the glider matches the density of the water in which it will be deployed. Weight and flotation configurations are documented
2.  The junctions between glider sections are thoroughly cleaned, old o-rings are discarded, new o-rings are inspected for damage that may compromise their ability to form a water-tight seal, new o-rings are properly lubricated, and the glider is sealed together. All cable connections are photographed to document the “final seal” and ensure the glider was reassembled properly
3.  A “Functional Checkout” is performed to ensure and document that all glider systems and science sensors are functioning properly. During the Functional Checkout, we verify the battery type installed in the glider (lithium primary or lithium rechargeable) and that the appropriate battery duration (total coulomb amp hours) is active in the glider’s autoexec.mi file
4.  Two test missions are performed in the SWFSC test tank (20 m x 10 m x 10 m) to ensure the glider is performing as expected
5.  Once per year, glider compasses are calibrated (the compass was not calibrated prior to this deployment)
6.  Biofouling prevention measures are applied as necessary
7.  Glider flight and science sampling files are prepared according to mission objectives. These objectives are identified by the Principal Investigators for each deployment. Files are uploaded to the Teledyne Webb Research Slocum Fleet Mission Control (SFMC) web interface and sent to the glider just prior to deployment over the Iridium connection
8.  When gliders are shipped to their deployment location, ESD glider technicians perform a second Functional Checkout to ensure the gliders function properly after transit

*OceanScout gliders*

1.  Gliders are configured with the standard ballast for salt water (8 weights in the nose)
2.  O-rings are replaced as needed
3.  Motors (variable buoyancy engine, pitch, and roll) are calibrated, either through the glider’s wifi connection prior to deployment, or by using platform.test through the command line interface
4.  Routes, diving parameters, and sensor sampling strategies are established through the Hefring cloud interface and deployed to the glider

### Deployment-specific testing

“calanus” was deployed in September (as “george”) for four days until an emergency recovery was necessary when the shadowgraph camera dislodged from its bracket and prevented the glider from diving normally. Because the glider itself performed as expected and showed no signs of malfunctioning, no further pre-deployment tests were done.

### Deployment

“calanus” was deployed on October 19, 2024, approximately 20 km west of Humboldt Bay in the Pacific Ocean (40^o^ 44.64’ N, 124^o^ 29.40’ W) from the F/V *Scrimshaw*. This glider was deployed with the sensor configuration listed above, and with lithium primary batteries (coulomb amp hour total = 800). We began this deployment using the autoballast feature to maximize oil pump efficiency while maintaining the appropriate dive angle of 26 degrees for the Nortek echosounder. Autoballast converged successfully early on and remained converged for the duration of the deployment.

On November 1, the glider aborted its mission for a science_super error. Pilots retrieved a log file from the science computer (.ncg file) and determined that the optode had failed. Two attempts were made on November 2 to communicate with the optode using the “uart” command, but the optode remained unresponsive. The optode was commented out of the glider’s proglets.dat file and the mission was resequenced with no further aborts.

Although this glider performed well throughout the 29-day deployment, pilots noticed glitches at the surface while the glider was attempting to read the surface script. In an effort to keep the glider from deviating too far from its programmed path in heavy currents, the glider’s waypoint plan included as many as 71 waypoints by October 25, many of which overlapped as the glider flew in a pattern of intersecting rectangles. When the glider received the script command to re-read .ma files (ctrl-F), it did not appear to complete this function, and instead repeatedly re-issued the command multiple times before advancing the script. As a short-term solution, pilots paused the script after the glider received new .ma files, manually issued the ctrl-F command to re-read files, and then resumed the script to complete surface activities and resume diving. Although this was a successful approach, it required pilots to respond immediately when the glider surfaced, rather than relying on a script.

Duplicate waypoints intended to direct the glider to fly intersecting rectangles also posed an issue and appeared to “confuse” the glider if it had already achieved a waypoint that appeared more than once in the waypoint plan. At least once during the deployment, the glider flew in the wrong direction after re-reading .ma files. Pilots offset duplicate waypoints by 0.1o latitude and longitude, which appeared to fix the problem, although the glider headed in the wrong direction again two weeks after the offset was implemented. The glider corrected course on its own, suggesting that perhaps this instance was unrelated to the duplicate waypoints and may have resulted from a bad GPS hit.

“calanus” was recovered on November 16, 2024, by the F/V *Scrimshaw*, approximately 17 km west of Humboldt Bay. The glider began its deployment with 266.04 amp hours and finished the deployment with 457.47 amp hours; this represents 191.43 amp hours used over 29 days, or 23.9% of its battery capacity.

### Post-Deployment Actions

Once the glider was back in the laboratory, pilots installed a new optode cable to determine the source of the optode failure during the deployment. Pilots were still unable to communicate with the optode through the “uart” command after installing the new cable, confirming that the optode itself failed. The optode will be returned to AANDERAA for service.

When pilots attempted to download acoustic data from the mini-Signature 100 echosounder through the Nortek Midas interface, they found one acoustic file approximately 1 GB in size, which was too small to encompass 29 days of data collection (a typical file size for a month-long deployment is approximately 10 GB). Pilots opened the echosounder housing to download data directly from the memory card. The full complement of data was present on the card, suggesting that the file may have been corrupted, which prevented us from seeing it on the Midas interface.

Pilots noticed that when the glider was powered on in the laboratory, a faint grinding sound emanated from the pitch battery section. This sound was not apparent during the pre-deployment functional checkout. Following the SOP for powering on an open deep glider (i.e., a glider without a vacuum), pilots commanded the pitch battery to move while watching and listening for binding, stalling, or rubbing. No issues were noted, and Teledyne confirmed that the grinding sound was not concerning.

```{r}
bs<-file.path(base.path,deployment,"plots","delayed","spatialGrids-sci","calanus-20241019_backscatter_700_spatialGrids.png")
chl<-file.path(base.path,deployment,"plots","delayed","spatialGrids-sci","calanus-20241019_chlorophyll_spatialGrids.png")
den<-file.path(base.path,deployment,"plots","delayed","spatialGrids-sci","calanus-20241019_density_spatialGrids.png")
oxy<-file.path(base.path,deployment,"plots","delayed","spatialGrids-sci","calanus-20241019_oxygen_concentration_spatialGrids.png")
sal<-file.path(base.path,deployment,"plots","delayed","spatialGrids-sci","calanus-20241019_salinity_spatialGrids.png")
temp<-file.path(base.path,deployment,"plots","delayed","spatialGrids-sci","calanus-20241019_temperature_spatialGrids.png")
```

### Figures

![a](`{r} bs`)
![b](`{r} chl`)
![c](`{r} den`)
![d](`{r} oxy`)
![e](`{r} sal`)
![f](`{r} temp`)


